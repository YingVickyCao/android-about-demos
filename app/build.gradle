plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
//    id 'com.google.dagger.hilt.android'
}
//apply plugin: 'com.google.dagger.hilt.android'

android {
    namespace 'com.hades.example.android'

    signingConfigs {
        config {
            storeFile file("$rootProject.projectDir/release.jks")
            storePassword '123456'
            keyAlias '123456'
            keyPassword '123456'
        }
    }

    compileSdk rootProject.ext.compileSdk

    defaultConfig {
        applicationId "com.hades.example.android"

        minSdk rootProject.ext.minSdk
        targetSdk rootProject.ext.targetSdk
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true

        ndk {
            // FIXED_Warning:ABIs [arm64-v8a,armeabi-v7a,armeabi] set by 'android.injected.build.abi' gradle flag contained 'ARMEABI, ARM64_V8A' not targeted by this project.
            abiFilters "arm64-v8a", "armeabi-v7a", "x86_64", "x86"
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.config
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            ext.enableCrashlytics = false
            signingConfig signingConfigs.config
        }
    }
    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibility
        targetCompatibility rootProject.ext.targetCompatibility
    }

    sourceSets {
        main {
            res.srcDirs += ['src/main/res-android']
            res.srcDirs += ['src/main/res-keyboard']
        }
    }
    buildFeatures {
        buildConfig true
    }

    viewBinding {
        enable = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation(libs.utilityAndroid) {
        artifact {
            type = 'aar'
        }
    }
    implementation(libs.utilityJvm)

    implementation libs.androidx.appcompat
    implementation libs.androidx.fragment
    implementation libs.androidx.activity
    implementation libs.androidx.annotation
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.recyclerview
    implementation libs.androidx.core
    implementation libs.androidx.coreKtx
    implementation libs.androidx.localbroadcastmanager
    implementation libs.androidx.workRuntime
    implementation libs.androidx.workRuntimeKtx
    implementation libs.androidx.workRxJava

    implementation libs.google.material
    implementation libs.google.playServicesLocation
    implementation libs.google.gson
    implementation libs.permission
    implementation libs.rxjava2
    implementation libs.rxandroid2
    implementation libs.nineoldandroids
    implementation libs.picasso
    implementation libs.netcipher
    implementation libs.okhttp
    implementation libs.loggingInterceptor
    implementation(libs.j2v8) {
        artifact {
            type = 'aar'
        }
    }
    implementation libs.kotlin.stdlib

    debugImplementation libs.debug.debugDb

    testImplementation libs.test.junit
    testImplementation libs.test.mockitoCore

    androidTestImplementation libs.androidTest.junit
    androidTestImplementation libs.androidTest.core
    androidTestImplementation libs.androidTest.espressoCore
}

// Allow references to generated code
kapt {
    correctErrorTypes true
}