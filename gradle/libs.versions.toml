# https://developer.android.google.cn/build/migrate-to-catalogs?hl=en#groovy

# How Gradle Version Catalog to support aar library?
# https://stackoverflow.com/questions/69046247/gradle-version-catalog-specify-library-build-type
# https://github.com/gradle/gradle/issues/16665
# https://github.com/gradle/gradle/issues/20074

[versions]
lifecycleViewmodel = "2.6.1"
lifecycleLivedata = "2.8.5"
lifecycle = "2.8.5"
media3 = "1.3.1"
activityKtx = "1.8.0"
agp = "8.5.0"
kotlin = "2.0.21"
#kotlin = "1.9.0"
activityCompose = "1.9.0"
composeBom = "2024.09.00"
roomVersion = "2.7.1"
paging_version = "3.3.6"

[libraries]
androidx-ktx = { group = "androidx.core", name = "core-ktx", version = "1.10.1" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version = "1.6.1" }
androidx-fragment = { group = "androidx.fragment", name = "fragment", version = "1.5.6" }
androidx-activity = { group = "androidx.activity", name = "activity", version = "1.8.0" }
androidx-annotation = { group = "androidx.annotation", name = "annotation", version = "1.6.0" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version = "2.1.4" }
#androidx.constraintlayout:constraintlayout-core:1.0.4
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomVersion" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomVersion" }
androidx-room-rxjava2 = { module = "androidx.room:room-rxjava2", version.ref = "roomVersion" }
androidx-room-guava = { module = "androidx.room:room-room-guava", version.ref = "roomVersion" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "roomVersion" }
androidx-room-testing = { module = "androidx.room:room-testing", version.ref = "roomVersion" }
constraintlayoutCore = { group = "androidx.constraintlayout", name = "constraintlayout-core", version = "1.0.4" }
androidx-recyclerview = { group = "androidx.recyclerview", name = "recyclerview", version = "1.3.0" }
androidx-core = { group = "androidx.core", name = "core", version = "1.10.1" }
androidx-coreKtx = { group = "androidx.core", name = "core-ktx", version = "1.10.1" }
androidx-localbroadcastmanager = { group = "androidx.localbroadcastmanager", name = "localbroadcastmanager", version = "1.1.0" }
# WorkManager,START
androidx-workRuntime = { group = "androidx.work", name = "work-runtime", version = "2.8.1" }
androidx-workRuntimeKtx = { group = "androidx.work", name = "work-runtime-ktx", version = "2.8.1" }
androidx-workRxJava = { group = "androidx.work", name = "work-rxjava2", version = "2.8.1" }
#androidx-workTesting = { group = "androidx.work", name = "work-testing", version = "2.8.1" }
#androidx-workGcm = { group = "androidx.work", name = "work-gcm", version = "2.8.1" }
#androidx-workMultiprocess = { group = "androidx.work", name = "work-multiprocess", version = "2.8.1" }

# WorkManager,END
# google, START
google-material = { group = "com.google.android.material", name = "material", version = "1.10.0" }
google-playServicesLocation = { group = "com.google.android.gms", name = "play-services-location", version = "21.0.1" }
google-gson = { group = "com.google.code.gson", name = "gson", version = "2.10.1" }
#google-hiltAndroid = { group = "com.google.dagger", name = "hilt-android", version = "2.44" }
androidx-media3 = { group = "androidx.media3", name = "media3-exoplayer", version.ref = "media3" }
androidx-media3-ui = { group = "androidx.media3", name = "media3-ui", version.ref = "media3" }
androidx-media3-hls = { group = "androidx.media3", name = "media3-exoplayer-hls", version.ref = "media3" }
androidx-media3-dash = { group = "androidx.media3", name = "media3-exoplayer-dash", version.ref = "media3" }
androidx-media3-rtsp = { group = "androidx.media3", name = "media3-exoplayer-rtsp", version.ref = "media3" }
androidx-media3-smoothstreaming = { group = "androidx.media3", name = "media3-exoplayer-smoothstreaming", version.ref = "media3" }
androidx-media3-cronet = { group = "androidx.media3", name = "media3-datasource-cronet", version.ref = "media3" }
androidx-media3-ima = { group = "androidx.media3", name = "media3-exoplayer-ima", version.ref = "media3" }
checker-qual = { module = "org.checkerframework:checker-qual", version = "3.45.0" }
# Lifecycles only (without ViewModel or LiveData)
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime", version.ref = "lifecycle" }
# ViewModel
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
androidx-lifecycle-livedata = { module = "androidx.lifecycle:lifecycle-livedata", version.ref = "lifecycle" }
androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }


tv = { group = "com.google.android.tv", name = "tv-ads", version = "1.0.0" }
#google-hiltCompiler = { group = "com.google.dagger", name = "hilt-compiler", version = "2.44" }
#google-hiltAndroidCompiler = { group = "com.google.dagger", name = "hilt-android-compiler", version = "2.44" }
# google, END

# thirdy party. START
#thirdparty-rxpermissions = { group = "com.tbruyelle.rxpermissions2", name = "rxpermissions", version = "0.9.5" }  # rxpermissions is "0.9.4@aar"
#permission = { group = "com.github.YingVickyCao", name = "SimplePermissions", version = "v0.1.2" }
permission = { group = "com.hades", name = "utility-permission", version = "0.1.5" }
rxjava2 = { group = "io.reactivex.rxjava2", name = "rxjava", version = "2.2.19" }
rxandroid2 = { group = "io.reactivex.rxjava2", name = "rxandroid", version = "2.1.1" }
nineoldandroids = { group = "com.nineoldandroids", name = "library", version = "2.4.0" }
# https://mvnrepository.com/artifact/com.eclipsesource.j2v8/j2v8
j2v8 = { group = "com.eclipsesource.j2v8", name = "j2v8", version = "6.2.1" } # j2v8 is "6.2.1@aar"
picasso = { group = "com.squareup.picasso", name = "picasso", version = "2.5.2" }
netcipher = { group = "info.guardianproject.netcipher", name = "netcipher", version = "2.1.0" }
okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version = "4.10.0" }
loggingInterceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor", version = "4.10.0" }
# thirdy party. END

kotlin-stdlib = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version = "1.9.20" }

utilityAndroid = { group = "com.hades", name = "utility-android", version = "0.0.2" }
utilityJvm = { group = "com.hades", name = "utility-jvm", version = "0.0.1" }

kotlinx-coroutines-android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.1"


# https://developer.android.google.cn/topic/libraries/architecture/paging/v3-overview
androidx-paging-runtime = { module = "androidx.paging:paging-runtime", version.ref = "paging_version" }
#alternatively - without Android dependencies for tests
androidx-paging-common = { module = "androidx.paging:paging-common", version.ref = "paging_version" }
#optional - RxJava2 support
androidx-paging-rxjava2 = { module = "androidx.paging:paging-rxjava2", version.ref = "paging_version" }
#optional - RxJava3 support
androidx-paging-rxjava3 = { module = "androidx.paging:paging-rxjava3", version.ref = "paging_version" }
#optional - Guava ListenableFuture support
androidx-paging-guava = { module = "androidx.paging:paging-guava", version.ref = "paging_version" }
#optional - Jetpack Compose integration
androidx-paging-compose = { module = "androidx.paging:paging-compose", version.ref = "paging_version" }


# debug,START
debug-debugDb = { group = "com.amitshekhar.android", name = "debug-db", version = "1.0.6" }
# debug,END

# test, START
test-junit = { group = "junit", name = "junit", version = "4.13.2" }
test-mockitoCore = { group = "org.mockito", name = "mockito-core", version = "5.12.0" }
# test, END

# androidTest, START
androidTest_junit = { group = "androidx.test.ext", name = "junit", version = "1.1.5" }
androidTest_core = { group = "androidx.test", name = "core", version = "1.5.0" }
androidTest_espressoCore = { group = "androidx.test.espresso", name = "espresso-core", version = "3.5.1" }
androidTest_runner = { group = "androidx.test", name = "runner", version = "1.5.2" }
# androidTest, END

# plugin, START
plugin-androidGradle = { module = "com.android.tools.build:gradle", version.ref = "agp" }
plugin-kotlinGradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
androidx-preference = { group = "androidx.preference", name = "preference", version = "1.2.1" }
androidx-activity-ktx = { group = "androidx.activity", name = "activity-ktx", version.ref = "activityKtx" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
# plugin, END

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }