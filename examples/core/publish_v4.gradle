apply plugin: 'maven-publish'

java {
    withJavadocJar()
    withSourcesJar()
}

group = 'com.hades.example.android.libexamples'
version = '0.1.0'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = 'com.hades.example.android.libexamples'
            artifactId = 'core'
            version = '0.1.0'

//            versionMapping {
//                usage('java-api') {
//                    fromResolutionOf('runtimeClasspath')
//                }
//                usage('java-runtime') {
//                    fromResolutionResult()
//                }
//            }
            pom {
                name = 'core'
                description = 'A concise description of my library'
//                url = 'http://www.example.com/library'
//                properties = [
//                        myProp          : "value",
//                        "prop.with.dots": "anotherValue"
//                ]
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
//                developers {
//                    developer {
//                        id = 'johnd'
//                        name = 'John Doe'
//                        email = 'john.doe@example.com'
//                    }
//                }
//                scm {
//                    connection = 'scm:git:git://example.com/my-library.git'
//                    developerConnection = 'scm:git:ssh://example.com/my-library.git'
//                    url = 'http://example.com/my-library/'
//                }
            }
        }
    }
    repositories {
        // for debug
        // :core:publishToMavenLocal
        mavenLocal()
//        maven {
//            // change URLs to point to your repos, e.g. http://my.org/repo
//            def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
//            System.err.println("releasesRepoUrl=" + releasesRepoUrl)
//            def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
//            System.err.println("snapshotsRepoUrl=" + snapshotsRepoUrl)
//            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
////            credentials {
////                username = "xxx"
////                password = "xxx"
////            }
//        }

        // for release
        // :core:publish
        maven {
            name = "release"
            url = layout.buildDirectory.dir('repos/releases')
        }
    }
}

tasks.withType(PublishToMavenRepository).configureEach {
    def predicate = provider {
        (repository == publishing.repositories.release)
    }
    onlyIf("publishing binary to the release repository") {
        predicate.get()
    }
}
/**
 * maven-publish
 * gradle core:publish
 *
 * Ref :
 * https://developer.android.google.cn/studio/build/maven-publish-plugin?hl=zh-cn
 * https://docs.gradle.org/current/userguide/publishing_maven.html#publishing_maven:repositories
 * https://docs.gradle.org/current/userguide/publishing_customization.html
 * https://repo1.maven.org/maven2/com/squareup/okhttp3/okhttp/4.12.0/
 **/