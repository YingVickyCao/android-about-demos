//plugins {
//    id 'java-library'
//    id 'org.jetbrains.kotlin.jvm'
//}

apply plugin: 'java-library'
apply plugin: 'kotlin'

// add version
version = '0.1.0'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api libs.google.gson

    testImplementation libs.test.junit
}

java {
    sourceCompatibility = rootProject.ext.sourceCompatibility
    targetCompatibility = rootProject.ext.targetCompatibility
}

//compileKotlin {
//    kotlinOptions.jvmTarget = rootProject.ext.jvmTarget
//}

java {
    withSourcesJar()
    withJavadocJar()
}

tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': project.name, 'Implementation-Version': project.version)
//        from {
//            configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
//            configurations.runtime.collect { zipTree(it) }
//        }
//        exclude 'META-INF/*.RSA','META-INF/*.SF','META-INF/*.DSA'
    }
}


//jar {
//    manifest {
//        attributes('Implementation-Title': project.name, 'Implementation-Version': project.version)
//        from {
////            configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
//            configurations.runtime.collect { zipTree(it) }
//        }
//        exclude 'META-INF/*.RSA','META-INF/*.SF','META-INF/*.DSA'
//    }
//}


/**
 * https://docs.gradle.org/current/samples/sample_building_kotlin_libraries.html#review_the_project_files
 *
 * 1 generate jar
 * ./gradlew :core:build
 *
 * output :  core/build/libs/core.jar
 *
 * Verify that the archive is valid
 * jar tf lib-examples/core/build/libs/core.jar

 2 want the name of the JAR file to include the library version
 ./gradlew :core:jar

 output :  core/build/libs/core-0.1.0.jar

 jar tf lib-examples/core/build/libs/core-0.1.0.jar*/