// 所有项目的依赖配置
apply plugin: 'maven-publish'

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = "com.hades.example.android.libexamples"
                artifactId = project.getName()
                version = project.versionCode

//                System.err.println("groupId=" + project.group)
//                System.err.println("artifactId=" + project.getName())
//                System.err.println("version=" + project.versionCode)

                pom {
                    name = artifactId
                    description = 'A concise description of ' + project.getName() + " library"
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                }
            }
            // Creates a Maven publication called “debug”.
            debug(MavenPublication) {
                // Applies the component for the debug build variant.
                from components.debug

                groupId = "com.hades.example.android.libexamples"
                artifactId = project.getName() + '-debug'
                version = project.versionCode

//                System.err.println("groupId=" + project.group)
//                System.err.println("artifactId=" + project.getName())
//                System.err.println("version=" + project.versionCode)

                pom {
                    name = artifactId
                    description = 'A concise description of ' + project.getName() + " library"
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                }
            }
        }

        repositories {
            // for debug
            // :core:publishToMavenLocal
            // 即使注释掉 mavenLocal()，task PublishToMavenLocal 默认也是发布到mavenLocal()
            // 当然，通过配置也可以配置将mavenLocal() 作为 release的发布地址
//            mavenLocal()


//        // for release
//        // :core:publish
            maven {
                name = "release"
                url = layout.buildDirectory.dir('repos/releases')
            }
        }
    }
}

tasks.withType(PublishToMavenRepository) { it.dependsOn lint, test }.configureEach {
    def predicate = provider {
        (repository == publishing.repositories.release && publication == publishing.publications.release)
    }
    onlyIf("publishing binary to the release repository") {
        predicate.get()
    }
}

tasks.withType(PublishToMavenLocal).configureEach {
    def predicate = provider {
        publication == publishing.publications.debug
    }
    onlyIf("publishing binary to the release repository") {
        predicate.get()
    }
}


//tasks.withType(PublishToMavenRepository) { it.dependsOn lint, test }

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}


/**
 * maven-publish
 * gradle core:publish
 *
 * Ref :
 * https://developer.android.google.cn/studio/build/maven-publish-plugin?hl=zh-cn
 * https://docs.gradle.org/current/userguide/publishing_maven.html#publishing_maven:repositories
 * https://docs.gradle.org/current/userguide/publishing_customization.html
 * https://repo1.maven.org/maven2/com/squareup/okhttp3/okhttp/4.12.0/
 **/